str_sub(start=1, end=-5)
colnames(df) <- str_replace_all(colnames(df), "\\.", " ")
regx <- "^(\\.\\.\\.\\.\\.)"
df %>% gather(Bauperiode, Anzahl, -(1:3)) %>%
filter(`Kanton / Bezirk / Gemeinde` %>% str_detect(regx)) %>%
mutate(Anzahl   = as.numeric(Anzahl),
Gemeinde = `Kanton / Bezirk / Gemeinde`,
id       = Gemeinde %>% str_extract("\\d+") %>% as.numeric(),
Gemeinde = Gemeinde %>% str_replace("\\.+\\d+\\s", "")) %>%
select(-`Kanton / Bezirk / Gemeinde`)
}
theme_c <- function(...) {
theme_minimal() +
theme(
text = element_text(color = "#283018"),
# panel.grid.minor = element_line(color = "#ebebe5", size = 0.2),
panel.grid.major = element_line(color = "#ebebe5", size = 0.2),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "#f0eceb", color = NA),
panel.background = element_rect(fill = "#f0eceb", color = NA),
legend.background = element_rect(fill = "#f0eceb", color = NA),
panel.border = element_blank(),
...
)
}
df %>%
ggplot(aes(x=Bauperiode, y=Anzahl, fill=Gebäudekategorie)) +
geom_bar(stat="identity") +
coord_flip() +
theme_c()
df %>%
ggplot(aes(x=Bauperiode, y=Anzahl, fill=Gebäudekategorie)) +
geom_bar(stat="identity") +
coord_flip() +
theme_c() +
scale_fill_viridis(discrete=TRUE, direction = -1)
df %>%
ggplot(aes(x=Bauperiode, y=Anzahl, fill=Gebäudekategorie)) +
geom_bar(stat="identity") +
coord_flip() +
theme_c() +
scale_fill_viridis(discrete=TRUE, direction = 1)
install.packages("knitr")
install.packages("markdown")
install.packages("backports")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(maptools)
library(broom)
library(viridis)
library(raster)
library(rgdal)
library(rgeos)
library(tidyverse)
library(readxl)
library(readr)
library(magrittr)
df <- read_tsv("../_data/housing-landscape/wohnungen_2013-2016.csv",
skip=2, locale = locale(encoding = 'ISO-8859-1')) %>%
clean_data("2016")
knit_with_parameters('G:/jekyll/dominikpeter.github.io/_markdown/housing-landscape.Rmd', encoding = 'UTF-8')
knitr::opts_chunk$set(echo = TRUE)
df %>%
ggplot(aes(x=Bauperiode, y=Anzahl, fill=Gebäudekategorie)) +
geom_bar(stat="identity") +
coord_flip() +
theme_c() +
scale_fill_viridis(discrete=TRUE, direction = 1)
clean_data <- function(df, year){
df <- df %>% select(1:3,
colnames(.) %>%
endsWith(year) %>%
which
)
colnames(df)[1:3] <- c("Kanton / Bezirk / Gemeinde",
"Gebäudekategorie",
"Wohnungsfläche")
colnames(df)[endsWith(colnames(df), year)] <- colnames(df)[endsWith(colnames(df), year)] %>%
str_sub(start=1, end=-5)
colnames(df) <- str_replace_all(colnames(df), "\\.", " ")
regx <- "^(\\.\\.\\.\\.\\.)"
df %>% gather(Bauperiode, Anzahl, -(1:3)) %>%
filter(`Kanton / Bezirk / Gemeinde` %>% str_detect(regx)) %>%
mutate(Anzahl   = as.numeric(Anzahl),
Gemeinde = `Kanton / Bezirk / Gemeinde`,
id       = Gemeinde %>% str_extract("\\d+") %>% as.numeric(),
Gemeinde = Gemeinde %>% str_replace("\\.+\\d+\\s", "")) %>%
select(-`Kanton / Bezirk / Gemeinde`)
}
theme_c <- function(...) {
theme_minimal() +
theme(
text = element_text(color = "#283018"),
# panel.grid.minor = element_line(color = "#ebebe5", size = 0.2),
panel.grid.major = element_line(color = "#ebebe5", size = 0.2),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "#f0eceb", color = NA),
panel.background = element_rect(fill = "#f0eceb", color = NA),
legend.background = element_rect(fill = "#f0eceb", color = NA),
panel.border = element_blank(),
...
)
}
df <- read_tsv("../_data/housing-landscape/wohnungen_2013-2016.csv",
skip=2, locale = locale(encoding = 'ISO-8859-1')) %>%
clean_data("2016")
df %>% head()
df %>%
ggplot(aes(x=Bauperiode, y=Anzahl, fill=Gebäudekategorie)) +
geom_bar(stat="identity") +
coord_flip() +
theme_c() +
scale_fill_viridis(discrete=TRUE, direction = 1)
df %>%
ggplot(aes(x=Bauperiode, y=Anzahl, fill=Gebäudekategorie)) +
geom_bar(stat="identity") +
coord_flip() +
theme_c() +
scale_fill_viridis(discrete=TRUE, direction = 1)
library(readr)
library(stringr)
file <- read_file_raw("_posts/2018-04-08-housing-landscape.md")
file
file <- read_file("_posts/2018-04-08-housing-landscape.md")
file
str_extract(file, "../assets/plots/\\.+)")
str_extract(file, "../assets/plots/\\.+\\)")
str_extract(file, "\\.+../assets/plots/\\.+\\)")
str_extract(file, "assets/plots")
str_extract(file, "assets/plots/\\.+")
str_extract(file, "assets/plots/\\w+")
str_extract(file, "assets/plots/\\.+")
str_extract(file, "assets/plots/\.+")
str_extract(file, "assets/plots/\\w.+")
str_extract(file, "assets/plots/\\w.+png")
file_path <- str_extract(file, "assets/plots/\\w.+png")
file
file_path <- str_extract(file, "(assets/plots/\\w.+png")
file_path <- str_extract(file, "\\(assets/plots/\\w.+png")
file_path
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png")
file_path
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png)")
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png\\)")
file_path
name <- str_extract(file_path, "\\.+,png")
name
name <- str_extract(file_path, "\\.+png")
str_extract(file_path, "\\.+png")
str_extract(file_path, "\\w+png")
str_extract(file_path, "\\.+png")
str_extract(file_path, "\\W.+png")
str_extract(file_path, "/\\W.+png")
str_extract(file_path, "\\w.+png")
str_extract(file_path, "/\\w.+png")
str_extract(file_path, "/\\w.+png")
str_extract(file_path, "/\\w+png")
str_extract(file_path, "/\\w.+png")
basename(file_path)
str_extract(file_path, "/\\w.+png")
basename(str_extract(file_path, "/\\w.+png"))
basename(str_extract(file_path, "/\\w.+"))
basename(str_extract(file_path, "/\\w.+w+"))
basename(str_extract(file_path, "/\\w.+\\w+"))
file <- basename(str_extract(file_path, "/\\w.+\\w+"))
file_path
new_file_path <- paste0('({{ "/assets/plots/,',file_name,'" | absolute_url }})')
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('({{ "/assets/plots/,',file_name,'" | absolute_url }})')
new_file_path
file <- read_file(path)
path <- "_posts/2018-04-08-housing-landscape.md"
file <- read_file(path)
file <- str_replace(file, file_path, new_file_path)
file
write_file(path)
write_file(path)
file %>% write_file(path)
file <- read_file(path)
file
library(readr)
library(stringr)
path <- "_posts/2018-04-08-housing-landscape.md"
file <- read_file(path)
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png\\)")
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('({{ "/assets/plots/',file_name,'" | absolute_url }})')
file <- str_replace(file, file_path, new_file_path)
file %>% write_file(path)
library(readr)
library(stringr)
path <- "_posts/2018-04-08-housing-landscape.md"
file <- read_file(path)
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png\\)")
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('{{ "/assets/plots/',file_name,'" | absolute_url }}')
file <- str_replace(file, file_path, new_file_path)
file %>% write_file(path)
library(readr)
library(stringr)
path <- "_posts/2018-04-08-housing-landscape.md"
file <- read_file(path)
file_path <- str_extract(file, "\\(../assets/plots/\\w.+svg\\)")
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('{{ "/assets/plots/',file_name,'" | absolute_url }}')
file <- str_replace(file, file_path, new_file_path)
file %>% write_file(path)
library(readr)
library(stringr)
path <- "_posts/2018-04-08-housing-landscape.md"
file <- read_file(path)
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png\\)")
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('{{ "/assets/plots/',file_name,'" | absolute_url }}')
file <- str_replace(file, file_path, new_file_path)
file %>% write_file(path)
library(readr)
library(stringr)
path <- "_posts/2018-04-08-housing-landscape.md"
file <- read_file(path)
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png\\)")
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('{{ "/assets/plots/',file_name,'" | absolute_url }}')
file <- str_replace(file, file_path, new_file_path)
file %>% write_file(path)
dir
dir()
dir("_posts/")
files <- dir("_posts/")
files <- dir("_posts/", full.names = TRUE)
files
library(purrr)
clean_files <- function(path){
file <- read_file(path)
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png\\)")
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('{{ "/assets/plots/',file_name,'" | absolute_url }}')
file <- str_replace(file, file_path, new_file_path)
file %>% write_file(path)
}
walk(files, clean_files)
library(readr)
library(stringr)
library(purrr)
clean_files <- function(path){
file <- read_file(path)
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png\\)")
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('{{ "/assets/plots/',file_name,'" | absolute_url }}')
file <- str_replace(file, file_path, new_file_path)
file %>% write_file(path)
}
files <- dir("_posts/", full.names = TRUE)
walk(files, clean_files)
library(readr)
library(stringr)
library(purrr)
clean_files <- function(path){
file <- read_file(path)
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png\\)")
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('{{ "/assets/plots/',file_name,'" | absolute_url }}')
file <- str_replace(file, file_path, new_file_path)
file %>% write_file(path)
}
files <- dir("_posts/", full.names = TRUE)
walk(files, clean_files)
library(readr)
library(stringr)
library(purrr)
clean_files <- function(path){
file <- read_file(path)
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png\\)")
if (file_path){
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('{{ "/assets/plots/',file_name,'" | absolute_url }}')
file <- str_replace(file, file_path, new_file_path)
}
file %>% write_file(path)
}
files <- dir("_posts/", full.names = TRUE)
walk(files, clean_files)
knitr::opts_chunk$set(echo = TRUE,
dev = "png",
dpi = 2000,
message = FALSE,
warning = FALSE)
rm(list = ls())
library(tidyverse)
library(Rsenal)
library(pander)
library(viridis)
set.seed(2323)
setup_game <- function(n_doors){
doors <- c(TRUE, rep(FALSE, n_doors-1))
doors[sample(length(doors), replace=FALSE)]
}
pick_door <- function(doors, switch=FALSE){
init_guess <- runif(1, min=1, max=length(doors))
init_guess <- init_guess %>% round()
result <- doors[init_guess]
if (switch){
!result
}else{
result
}
}
calc_prob <- function(n_doors, n_reps, switch){
trials <- map_lgl(1:n_reps,
~pick_door(setup_game(n_doors),
switch = switch))
mean(trials)
}
rm(list = ls())
library(tidyverse)
library(Rsenal)
library(pander)
library(viridis)
set.seed(2323)
setup_game <- function(n_doors){
doors <- c(TRUE, rep(FALSE, n_doors-1))
doors[sample(length(doors), replace=FALSE)]
}
pick_door <- function(doors, switch=FALSE){
init_guess <- runif(1, min=1, max=length(doors))
init_guess <- init_guess %>% round()
result <- doors[init_guess]
if (switch){
!result
}else{
result
}
}
calc_prob <- function(n_doors, n_reps, switch){
trials <- map_lgl(1:n_reps,
~pick_door(setup_game(n_doors),
switch = switch))
mean(trials)
}
trials <- function(n_doors_trial, switch)
map_dbl(n_doors_trial, ~calc_prob(.x, 1000, switch))
n_doors_trial <- 2:100
df <- tibble(n_doors = n_doors_trial,
switch  = trials(n_doors_trial, TRUE),
rest    = trials(n_doors_trial, FALSE)) %>%
gather(switch, prop, -n_doors)
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.1) +
theme_blog()
trials <- function(n_doors_trial, switch)
map_dbl(n_doors_trial, ~calc_prob(.x, 1000, switch))
n_doors_trial <- 2:100
df <- tibble(n_doors   = n_doors_trial,
switched  = trials(n_doors_trial, TRUE),
stayed    = trials(n_doors_trial, FALSE)) %>%
gather(switch, prop, -n_doors)
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.1) +
theme_blog(background = FALSE)
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.1) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("028090", "F45B69"))
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.1) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#028090", "#F45B69"))
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.1) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#EFF248", "#406E8E"))
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.1) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#EFF248", "#7BE085"))
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.1) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#7BE085", "#406E8E"))
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.1) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#5BC0BE", "#406E8E"))
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.1) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#5BC0BE", "#FCFF5B"))
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.1) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#FCFF5B", "#406E8E"))
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.1) +
theme_blog(background = TRUE) +
scale_color_manual(values = c("#FCFF5B", "#406E8E"))
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.1) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#FFC857", "#19647E"))
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.2) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#FFC857", "#19647E"))
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.2) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#119DA4", "#19647E")) +
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.2) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#119DA4", "#19647E")) +
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.2) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#119DA4", "#19647E"))
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.2) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#FFC857", "#19647E")) +
ylab("Probability of Winning")
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.2) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#F45B69", "#19647E")) +
ylab("Probability of Winning")
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.2) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#EFF248", "#19647E")) +
ylab("Probability of Winning")
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.4) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#EFF248", "#19647E")) +
ylab("Probability of Winning")
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.4) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#7BE085", "#19647E")) +
ylab("Probability of Winning")
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.4) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#7BE085", "#19647E")) +
ylab("Probability of Winning\n") +
xlab("")
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.4) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#7BE085", "#19647E")) +
ylab("Probability of Winning\n") +
xlab("Number of Doors to choose from")
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.4) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#7BE085", "#19647E")) +
ylab("Probability of Winning\n") +
xlab("Number of Doors to choose")
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.4) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#7BE085", "#19647E")) +
ylab("Probability of Winning\n") +
xlab("\nNumber of Doors to choose")
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.4) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#7BE085", "#19647E"), name="") +
ylab("Probability of Winning\n") +
xlab("\nNumber of Doors to choose")
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.4) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#7BE085", "#19647E"), name="") +
ylab("Probability of Winning\n") +
xlab("\nNumber of Doors to choose") +
labs(title = "Simulating Monty Hall Problem")
df %>%
ggplot(aes(x = n_doors, y = prop, color = switch)) +
geom_line(size=1.4) +
theme_blog(background = FALSE) +
scale_color_manual(values = c("#7BE085", "#19647E"), name="") +
ylab("Probability of Winning\n") +
xlab("\nNumber of Doors to choose") +
labs(title = "Simulating Monty Hall Problem\n")
