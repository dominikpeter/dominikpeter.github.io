df %>% gather(Bauperiode, Anzahl, -(1:3)) %>%
filter(`Kanton / Bezirk / Gemeinde` %>% str_detect(regx)) %>%
mutate(Anzahl   = as.numeric(Anzahl),
Gemeinde = `Kanton / Bezirk / Gemeinde`,
id       = Gemeinde %>% str_extract("\\d+") %>% as.numeric(),
Gemeinde = Gemeinde %>% str_replace("\\d+\\s", ""),
Gemeinde = Gemeinde %>% str_replace(regx, "")) %>%
select(-`Kanton / Bezirk / Gemeinde`)
}
clean_data <- function(df, year){
df <- df %>% select(1:3,
colnames(.) %>%
endsWith(year) %>%
which
)
colnames(df)[1:3] <- c("Kanton / Bezirk / Gemeinde",
"Gebäudekategorie",
"Wohnungsfläche")
colnames(df)[endsWith(colnames(df), year)] <- colnames(df)[endsWith(colnames(df), year)] %>%
str_sub(start=1, end=-5)
colnames(df) <- str_replace_all(colnames(df), "\\.", " ")
regx <- "^(\\.\\.\\.\\.\\.)"
df %>% gather(Bauperiode, Anzahl, -(1:3)) %>%
filter(`Kanton / Bezirk / Gemeinde` %>% str_detect(regx)) %>%
mutate(Anzahl   = as.numeric(Anzahl),
Gemeinde = `Kanton / Bezirk / Gemeinde`,
id       = Gemeinde %>% str_extract("\\d+") %>% as.numeric(),
Gemeinde = Gemeinde %>% str_replace("\\d+\\.+\\s", ""))
select(-`Kanton / Bezirk / Gemeinde`)
}
df <- read_tsv("./_data/housing-landscape/wohnungen_2013-2016.csv",
skip=2, locale = locale(encoding = 'ISO-8859-1'))
df %>% clean_data("2016")
clean_data <- function(df, year){
df <- df %>% select(1:3,
colnames(.) %>%
endsWith(year) %>%
which
)
colnames(df)[1:3] <- c("Kanton / Bezirk / Gemeinde",
"Gebäudekategorie",
"Wohnungsfläche")
colnames(df)[endsWith(colnames(df), year)] <- colnames(df)[endsWith(colnames(df), year)] %>%
str_sub(start=1, end=-5)
colnames(df) <- str_replace_all(colnames(df), "\\.", " ")
regx <- "^(\\.\\.\\.\\.\\.)"
df %>% gather(Bauperiode, Anzahl, -(1:3)) %>%
filter(`Kanton / Bezirk / Gemeinde` %>% str_detect(regx)) %>%
mutate(Anzahl   = as.numeric(Anzahl),
Gemeinde = `Kanton / Bezirk / Gemeinde`,
id       = Gemeinde %>% str_extract("\\d+") %>% as.numeric(),
Gemeinde = Gemeinde %>% str_replace("\\d+\\.+\\s", ""))
select(-`Kanton / Bezirk / Gemeinde`)
}
clean_data <- function(df, year){
df <- df %>% select(1:3,
colnames(.) %>%
endsWith(year) %>%
which
)
colnames(df)[1:3] <- c("Kanton / Bezirk / Gemeinde",
"Gebäudekategorie",
"Wohnungsfläche")
colnames(df)[endsWith(colnames(df), year)] <- colnames(df)[endsWith(colnames(df), year)] %>%
str_sub(start=1, end=-5)
colnames(df) <- str_replace_all(colnames(df), "\\.", " ")
regx <- "^(\\.\\.\\.\\.\\.)"
df %>% gather(Bauperiode, Anzahl, -(1:3)) %>%
filter(`Kanton / Bezirk / Gemeinde` %>% str_detect(regx)) %>%
mutate(Anzahl   = as.numeric(Anzahl),
Gemeinde = `Kanton / Bezirk / Gemeinde`,
id       = Gemeinde %>% str_extract("\\d+") %>% as.numeric(),
Gemeinde = Gemeinde %>% str_replace("\\d+\\.+\\s", "")) %>%
select(-`Kanton / Bezirk / Gemeinde`)
}
df <- read_tsv("./_data/housing-landscape/wohnungen_2013-2016.csv",
skip=2, locale = locale(encoding = 'ISO-8859-1'))
df %>% clean_data("2016")
clean_data <- function(df, year){
df <- df %>% select(1:3,
colnames(.) %>%
endsWith(year) %>%
which
)
colnames(df)[1:3] <- c("Kanton / Bezirk / Gemeinde",
"Gebäudekategorie",
"Wohnungsfläche")
colnames(df)[endsWith(colnames(df), year)] <- colnames(df)[endsWith(colnames(df), year)] %>%
str_sub(start=1, end=-5)
colnames(df) <- str_replace_all(colnames(df), "\\.", " ")
regx <- "^(\\.\\.\\.\\.\\.)"
df %>% gather(Bauperiode, Anzahl, -(1:3)) %>%
filter(`Kanton / Bezirk / Gemeinde` %>% str_detect(regx)) %>%
mutate(Anzahl   = as.numeric(Anzahl),
Gemeinde = `Kanton / Bezirk / Gemeinde`,
id       = Gemeinde %>% str_extract("\\d+") %>% as.numeric(),
Gemeinde = Gemeinde %>% str_replace("\\.+\\d+\\s", "")) %>%
select(-`Kanton / Bezirk / Gemeinde`)
}
clean_data <- function(df, year){
df <- df %>% select(1:3,
colnames(.) %>%
endsWith(year) %>%
which
)
colnames(df)[1:3] <- c("Kanton / Bezirk / Gemeinde",
"Gebäudekategorie",
"Wohnungsfläche")
colnames(df)[endsWith(colnames(df), year)] <- colnames(df)[endsWith(colnames(df), year)] %>%
str_sub(start=1, end=-5)
colnames(df) <- str_replace_all(colnames(df), "\\.", " ")
regx <- "^(\\.\\.\\.\\.\\.)"
df %>% gather(Bauperiode, Anzahl, -(1:3)) %>%
filter(`Kanton / Bezirk / Gemeinde` %>% str_detect(regx)) %>%
mutate(Anzahl   = as.numeric(Anzahl),
Gemeinde = `Kanton / Bezirk / Gemeinde`,
id       = Gemeinde %>% str_extract("\\d+") %>% as.numeric(),
Gemeinde = Gemeinde %>% str_replace("\\.+\\d+\\s", "")) %>%
select(-`Kanton / Bezirk / Gemeinde`)
}
df <- read_tsv("./_data/housing-landscape/wohnungen_2013-2016.csv",
skip=2, locale = locale(encoding = 'ISO-8859-1'))
df %>% clean_data("2016")
df %>% head()
df <- read_tsv("./_data/housing-landscape/wohnungen_2013-2016.csv",
skip=2, locale = locale(encoding = 'ISO-8859-1')) %>%
clean_data("2016")
df %>% head()
df <- read_tsv("./_data/housing-landscape/wohnungen_2013-2016.csv",
skip=2, locale = locale(encoding = 'ISO-8859-1')) %>%
clean_data("2016")
df %>% head()
clean_data <- function(df, year){
df <- df %>% select(1:3,
colnames(.) %>%
endsWith(year) %>%
which
)
colnames(df)[1:3] <- c("Kanton / Bezirk / Gemeinde",
"Gebäudekategorie",
"Wohnungsfläche")
colnames(df)[endsWith(colnames(df), year)] <- colnames(df)[endsWith(colnames(df), year)] %>%
str_sub(start=1, end=-5)
colnames(df) <- str_replace_all(colnames(df), "\\.", " ")
regx <- "^(\\.\\.\\.\\.\\.)"
df %>% gather(Bauperiode, Anzahl, -(1:3)) %>%
filter(`Kanton / Bezirk / Gemeinde` %>% str_detect(regx)) %>%
mutate(Anzahl   = as.numeric(Anzahl),
Gemeinde = `Kanton / Bezirk / Gemeinde`,
id       = Gemeinde %>% str_extract("\\d+") %>% as.numeric(),
Gemeinde = Gemeinde %>% str_replace("\\.+\\d+\\s", "")) %>%
select(-`Kanton / Bezirk / Gemeinde`)
}
theme_map <- function(...) {
theme_minimal() +
theme(
text = element_text(color = "#283018"),
# panel.grid.minor = element_line(color = "#ebebe5", size = 0.2),
panel.grid.major = element_line(color = "#ebebe5", size = 0.2),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "#f0eceb", color = NA),
panel.background = element_rect(fill = "#f0eceb", color = NA),
legend.background = element_rect(fill = "#f0eceb", color = NA),
panel.border = element_blank(),
...
)
}
df <- read_tsv("./_data/housing-landscape/wohnungen_2013-2016.csv",
skip=2, locale = locale(encoding = 'ISO-8859-1')) %>%
clean_data("2016")
df %>% head()
df %>%
ggplot(aes(x=Bauperiode, y=Anzahl, fill=Gebäudekategorie)) +
geom_bar(stat="identity") +
coord_flip()
df %>%
ggplot(aes(x=Bauperiode, y=Anzahl, fill=Gebäudekategorie)) +
geom_bar(stat="identity") +
coord_flip() +
theme_c()
clean_data <- function(df, year){
df <- df %>% select(1:3,
colnames(.) %>%
endsWith(year) %>%
which
)
colnames(df)[1:3] <- c("Kanton / Bezirk / Gemeinde",
"Gebäudekategorie",
"Wohnungsfläche")
colnames(df)[endsWith(colnames(df), year)] <- colnames(df)[endsWith(colnames(df), year)] %>%
str_sub(start=1, end=-5)
colnames(df) <- str_replace_all(colnames(df), "\\.", " ")
regx <- "^(\\.\\.\\.\\.\\.)"
df %>% gather(Bauperiode, Anzahl, -(1:3)) %>%
filter(`Kanton / Bezirk / Gemeinde` %>% str_detect(regx)) %>%
mutate(Anzahl   = as.numeric(Anzahl),
Gemeinde = `Kanton / Bezirk / Gemeinde`,
id       = Gemeinde %>% str_extract("\\d+") %>% as.numeric(),
Gemeinde = Gemeinde %>% str_replace("\\.+\\d+\\s", "")) %>%
select(-`Kanton / Bezirk / Gemeinde`)
}
theme_map <- function(...) {
theme_minimal() +
theme(
text = element_text(color = "#283018"),
# panel.grid.minor = element_line(color = "#ebebe5", size = 0.2),
panel.grid.major = element_line(color = "#ebebe5", size = 0.2),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "#f0eceb", color = NA),
panel.background = element_rect(fill = "#f0eceb", color = NA),
legend.background = element_rect(fill = "#f0eceb", color = NA),
panel.border = element_blank(),
...
)
}
df %>%
ggplot(aes(x=Bauperiode, y=Anzahl, fill=Gebäudekategorie)) +
geom_bar(stat="identity") +
coord_flip() +
theme_c()
clean_data <- function(df, year){
df <- df %>% select(1:3,
colnames(.) %>%
endsWith(year) %>%
which
)
colnames(df)[1:3] <- c("Kanton / Bezirk / Gemeinde",
"Gebäudekategorie",
"Wohnungsfläche")
colnames(df)[endsWith(colnames(df), year)] <- colnames(df)[endsWith(colnames(df), year)] %>%
str_sub(start=1, end=-5)
colnames(df) <- str_replace_all(colnames(df), "\\.", " ")
regx <- "^(\\.\\.\\.\\.\\.)"
df %>% gather(Bauperiode, Anzahl, -(1:3)) %>%
filter(`Kanton / Bezirk / Gemeinde` %>% str_detect(regx)) %>%
mutate(Anzahl   = as.numeric(Anzahl),
Gemeinde = `Kanton / Bezirk / Gemeinde`,
id       = Gemeinde %>% str_extract("\\d+") %>% as.numeric(),
Gemeinde = Gemeinde %>% str_replace("\\.+\\d+\\s", "")) %>%
select(-`Kanton / Bezirk / Gemeinde`)
}
theme_c <- function(...) {
theme_minimal() +
theme(
text = element_text(color = "#283018"),
# panel.grid.minor = element_line(color = "#ebebe5", size = 0.2),
panel.grid.major = element_line(color = "#ebebe5", size = 0.2),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "#f0eceb", color = NA),
panel.background = element_rect(fill = "#f0eceb", color = NA),
legend.background = element_rect(fill = "#f0eceb", color = NA),
panel.border = element_blank(),
...
)
}
df %>%
ggplot(aes(x=Bauperiode, y=Anzahl, fill=Gebäudekategorie)) +
geom_bar(stat="identity") +
coord_flip() +
theme_c()
df %>%
ggplot(aes(x=Bauperiode, y=Anzahl, fill=Gebäudekategorie)) +
geom_bar(stat="identity") +
coord_flip() +
theme_c() +
scale_fill_viridis(discrete=TRUE, direction = -1)
df %>%
ggplot(aes(x=Bauperiode, y=Anzahl, fill=Gebäudekategorie)) +
geom_bar(stat="identity") +
coord_flip() +
theme_c() +
scale_fill_viridis(discrete=TRUE, direction = 1)
install.packages("knitr")
install.packages("markdown")
install.packages("backports")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(maptools)
library(broom)
library(viridis)
library(raster)
library(rgdal)
library(rgeos)
library(tidyverse)
library(readxl)
library(readr)
library(magrittr)
df <- read_tsv("../_data/housing-landscape/wohnungen_2013-2016.csv",
skip=2, locale = locale(encoding = 'ISO-8859-1')) %>%
clean_data("2016")
knit_with_parameters('G:/jekyll/dominikpeter.github.io/_markdown/housing-landscape.Rmd', encoding = 'UTF-8')
knitr::opts_chunk$set(echo = TRUE)
df %>%
ggplot(aes(x=Bauperiode, y=Anzahl, fill=Gebäudekategorie)) +
geom_bar(stat="identity") +
coord_flip() +
theme_c() +
scale_fill_viridis(discrete=TRUE, direction = 1)
clean_data <- function(df, year){
df <- df %>% select(1:3,
colnames(.) %>%
endsWith(year) %>%
which
)
colnames(df)[1:3] <- c("Kanton / Bezirk / Gemeinde",
"Gebäudekategorie",
"Wohnungsfläche")
colnames(df)[endsWith(colnames(df), year)] <- colnames(df)[endsWith(colnames(df), year)] %>%
str_sub(start=1, end=-5)
colnames(df) <- str_replace_all(colnames(df), "\\.", " ")
regx <- "^(\\.\\.\\.\\.\\.)"
df %>% gather(Bauperiode, Anzahl, -(1:3)) %>%
filter(`Kanton / Bezirk / Gemeinde` %>% str_detect(regx)) %>%
mutate(Anzahl   = as.numeric(Anzahl),
Gemeinde = `Kanton / Bezirk / Gemeinde`,
id       = Gemeinde %>% str_extract("\\d+") %>% as.numeric(),
Gemeinde = Gemeinde %>% str_replace("\\.+\\d+\\s", "")) %>%
select(-`Kanton / Bezirk / Gemeinde`)
}
theme_c <- function(...) {
theme_minimal() +
theme(
text = element_text(color = "#283018"),
# panel.grid.minor = element_line(color = "#ebebe5", size = 0.2),
panel.grid.major = element_line(color = "#ebebe5", size = 0.2),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "#f0eceb", color = NA),
panel.background = element_rect(fill = "#f0eceb", color = NA),
legend.background = element_rect(fill = "#f0eceb", color = NA),
panel.border = element_blank(),
...
)
}
df <- read_tsv("../_data/housing-landscape/wohnungen_2013-2016.csv",
skip=2, locale = locale(encoding = 'ISO-8859-1')) %>%
clean_data("2016")
df %>% head()
df %>%
ggplot(aes(x=Bauperiode, y=Anzahl, fill=Gebäudekategorie)) +
geom_bar(stat="identity") +
coord_flip() +
theme_c() +
scale_fill_viridis(discrete=TRUE, direction = 1)
df %>%
ggplot(aes(x=Bauperiode, y=Anzahl, fill=Gebäudekategorie)) +
geom_bar(stat="identity") +
coord_flip() +
theme_c() +
scale_fill_viridis(discrete=TRUE, direction = 1)
library(readr)
library(stringr)
file <- read_file_raw("_posts/2018-04-08-housing-landscape.md")
file
file <- read_file("_posts/2018-04-08-housing-landscape.md")
file
str_extract(file, "../assets/plots/\\.+)")
str_extract(file, "../assets/plots/\\.+\\)")
str_extract(file, "\\.+../assets/plots/\\.+\\)")
str_extract(file, "assets/plots")
str_extract(file, "assets/plots/\\.+")
str_extract(file, "assets/plots/\\w+")
str_extract(file, "assets/plots/\\.+")
str_extract(file, "assets/plots/\.+")
str_extract(file, "assets/plots/\\w.+")
str_extract(file, "assets/plots/\\w.+png")
file_path <- str_extract(file, "assets/plots/\\w.+png")
file
file_path <- str_extract(file, "(assets/plots/\\w.+png")
file_path <- str_extract(file, "\\(assets/plots/\\w.+png")
file_path
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png")
file_path
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png)")
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png\\)")
file_path
name <- str_extract(file_path, "\\.+,png")
name
name <- str_extract(file_path, "\\.+png")
str_extract(file_path, "\\.+png")
str_extract(file_path, "\\w+png")
str_extract(file_path, "\\.+png")
str_extract(file_path, "\\W.+png")
str_extract(file_path, "/\\W.+png")
str_extract(file_path, "\\w.+png")
str_extract(file_path, "/\\w.+png")
str_extract(file_path, "/\\w.+png")
str_extract(file_path, "/\\w+png")
str_extract(file_path, "/\\w.+png")
basename(file_path)
str_extract(file_path, "/\\w.+png")
basename(str_extract(file_path, "/\\w.+png"))
basename(str_extract(file_path, "/\\w.+"))
basename(str_extract(file_path, "/\\w.+w+"))
basename(str_extract(file_path, "/\\w.+\\w+"))
file <- basename(str_extract(file_path, "/\\w.+\\w+"))
file_path
new_file_path <- paste0('({{ "/assets/plots/,',file_name,'" | absolute_url }})')
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('({{ "/assets/plots/,',file_name,'" | absolute_url }})')
new_file_path
file <- read_file(path)
path <- "_posts/2018-04-08-housing-landscape.md"
file <- read_file(path)
file <- str_replace(file, file_path, new_file_path)
file
write_file(path)
write_file(path)
file %>% write_file(path)
file <- read_file(path)
file
library(readr)
library(stringr)
path <- "_posts/2018-04-08-housing-landscape.md"
file <- read_file(path)
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png\\)")
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('({{ "/assets/plots/',file_name,'" | absolute_url }})')
file <- str_replace(file, file_path, new_file_path)
file %>% write_file(path)
library(readr)
library(stringr)
path <- "_posts/2018-04-08-housing-landscape.md"
file <- read_file(path)
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png\\)")
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('{{ "/assets/plots/',file_name,'" | absolute_url }}')
file <- str_replace(file, file_path, new_file_path)
file %>% write_file(path)
library(readr)
library(stringr)
path <- "_posts/2018-04-08-housing-landscape.md"
file <- read_file(path)
file_path <- str_extract(file, "\\(../assets/plots/\\w.+svg\\)")
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('{{ "/assets/plots/',file_name,'" | absolute_url }}')
file <- str_replace(file, file_path, new_file_path)
file %>% write_file(path)
library(readr)
library(stringr)
path <- "_posts/2018-04-08-housing-landscape.md"
file <- read_file(path)
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png\\)")
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('{{ "/assets/plots/',file_name,'" | absolute_url }}')
file <- str_replace(file, file_path, new_file_path)
file %>% write_file(path)
library(readr)
library(stringr)
path <- "_posts/2018-04-08-housing-landscape.md"
file <- read_file(path)
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png\\)")
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('{{ "/assets/plots/',file_name,'" | absolute_url }}')
file <- str_replace(file, file_path, new_file_path)
file %>% write_file(path)
dir
dir()
dir("_posts/")
files <- dir("_posts/")
files <- dir("_posts/", full.names = TRUE)
files
library(purrr)
clean_files <- function(path){
file <- read_file(path)
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png\\)")
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('{{ "/assets/plots/',file_name,'" | absolute_url }}')
file <- str_replace(file, file_path, new_file_path)
file %>% write_file(path)
}
walk(files, clean_files)
library(readr)
library(stringr)
library(purrr)
clean_files <- function(path){
file <- read_file(path)
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png\\)")
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('{{ "/assets/plots/',file_name,'" | absolute_url }}')
file <- str_replace(file, file_path, new_file_path)
file %>% write_file(path)
}
files <- dir("_posts/", full.names = TRUE)
walk(files, clean_files)
library(readr)
library(stringr)
library(purrr)
clean_files <- function(path){
file <- read_file(path)
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png\\)")
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('{{ "/assets/plots/',file_name,'" | absolute_url }}')
file <- str_replace(file, file_path, new_file_path)
file %>% write_file(path)
}
files <- dir("_posts/", full.names = TRUE)
walk(files, clean_files)
library(readr)
library(stringr)
library(purrr)
clean_files <- function(path){
file <- read_file(path)
file_path <- str_extract(file, "\\(../assets/plots/\\w.+png\\)")
if (file_path){
file_name <- basename(str_extract(file_path, "/\\w.+\\w+"))
new_file_path <- paste0('{{ "/assets/plots/',file_name,'" | absolute_url }}')
file <- str_replace(file, file_path, new_file_path)
}
file %>% write_file(path)
}
files <- dir("_posts/", full.names = TRUE)
walk(files, clean_files)
